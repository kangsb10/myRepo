<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="shopping">
   <typeAlias alias="shoppingVO" type="kr.or.ddit.vo.ShoppingVO"></typeAlias>
   
    <resultMap class="shoppingVO" id="shoppnigMap">
      <result property="goods_id" column="goods_id"/>
      <result property="lprod_gu" column="lprod_gu"/>
      <result property="buyer_id" column="buyer_id"/>
      <result property="goods_nm" column="goods_nm"/>
      <result property="goods_pc" column="goods_pc"/>
      <result property="goods_invntry" column="goods_invntry"/>
      <result property="goods_dc" column="goods_dc"/>
      
      <result property="items" column="goods_id" select="shoppingfileitem.shoppingfileitemList"/>
   </resultMap>
   
   <!-- 	private String rnum;
	private String goods_id; // 상품 아이디
	private String lprod_gu; // 카테고리 코드
	private String buyer_id; // 구매처 아이디
	private String goods_nm; // 상품 명
	private String goods_pc; // 상품 가격
	private String goods_invntry; // 상품 재고량
	private String goods_dc; // 상품 설명

	private List<ShoppingFileItemVO> items; -->
   <sql id="selectAll">
      SELECT *
         FROM GOODS
         WHERE GOODS_DELETE = 'n'
   </sql>
   
   
   
   <sql id="searchCondition">
   		<dynamic prepend="AND">
    			<isNotEmpty property="search_keyword" open="(" close=")">
    				<isEqual property="search_keycode" compareValue="TITLE">
    					 GOODS_NM LIKE '%'||#search_keyword#||'%' 
<!--     					    OR BO_CONTENT LIKE '%'||#search_keyword#||'%'  -->
<!--     					    OR BO_NICKNAME LIKE '%'||#search_keyword#||'%'  -->
    					    
    				</isEqual>
<!--     				<isEqual property="search_keycode" compareValue="TITLE"> -->
<!--     					 BO_TITLE LIKE '%'||#search_keyword#||'%'  -->
<!--     				</isEqual> -->
<!--     				<isEqual property="search_keycode" compareValue="CONTENT"> -->
<!--     					 BO_CONTENT LIKE '%'||#search_keyword#||'%'  -->
<!--     				</isEqual> -->
<!--     				<isEqual property="search_keycode" compareValue="WRITER"> -->
<!--     					 BO_NICKNAME LIKE '%'||#search_keyword#||'%'  -->
<!--     				</isEqual> -->
    			</isNotEmpty>
    		</dynamic>
   </sql>
   
   <sql id="selcectCondition">
   	<dynamic prepend="AND">
    			<isNotEmpty property="lprod_gu" open="(" close=")">
   					 LPROD_GU = #lprod_gu# 
   				</isNotEmpty>
    </dynamic>	 
   </sql>
   
   <select id="shoppingInfo" parameterClass="map" resultMap="shoppnigMap">
      <include refid="selectAll"/>
         AND goods_id = #goods_id#
   </select>
   
   <select id="shoppingList"  parameterClass="map" resultMap="shoppnigMap">
   	   SELECT B.*
	   FROM (SELECT ROWNUM RNUM , A.*
	    FROM (  <include refid="selectAll"/> 
	    		<include refid="selcectCondition"/>
	    		<include refid="searchCondition"/> 
	    		)A) B 
	    <![CDATA[
		    WHERE B.RNUM <= #startCount# 
		      AND B.RNUM >= #endCount# 
   		]]>
	    ORDER BY RNUM DESC 
   </select>
   
   <insert id="insertShopping" parameterClass="shoppingVO" >
<!--       <selectKey keyProperty="goods_id" resultClass="string"> -->
<!--          SELECT GOODS_SEQ.NEXTVAL -->
<!--             FROM DUAL -->
<!--       </selectKey> -->
      
      INSERT INTO GOODS(GOODS_ID,
						LPROD_GU,
						BUYER_ID,
						GOODS_NM,
						GOODS_PC,
						GOODS_INVNTRY,
						GOODS_DC
			                       	)
		                     VALUES(#goods_id#,
									#lprod_gu#,
									#buyer_id#,
									#goods_nm#,
									#goods_pc#,
									#goods_invntry#,
									#goods_dc#)
   </insert>
   
<!--    <update id="deleteFreeboard" parameterClass="map" > -->
<!--    			UPDATE FREEBOARD  -->
<!--    			SET BO_STATUS = 'n' -->
<!--    			WHERE BO_NO = #bo_no#  -->
<!--    </update> -->
   
<!--    <update id="updateFreeboard" parameterClass="freeboardVO"> -->
<!--    			UPDATE FREEBOARD  -->
<!--    			SET   BO_TITLE = #bo_title# -->
<!--                  ,BO_NICKNAME = #bo_nickname# -->
<!--                  ,BO_PWD = #bo_pwd# -->
<!--                  ,BO_MAIL = #bo_mail# -->
<!--                  ,BO_CONTENT = #bo_content#  -->
<!--             WHERE BO_NO = #bo_no# -->
<!--    </update> -->
   
   <!-- 댓글 쿼리 -->
<!--    <select id="incrementSeq" parameterClass="freeboardVO" resultClass="string"> -->
<!--    			 SELECT MAX(BO_SEQ) + 1  -->
<!--    			 FROM 	FREEBOARD  -->
<!--    			 WHERE 	BO_GROUP = #bo_group#   -->
<!--    </select> -->
   
<!--    <update id="updateSeq"  parameterClass="freeboardVO" > -->
<!--    			UPDATE FREEBOARD  -->
<!--    			   SET BO_SEQ = BO_SEQ + 1  -->
<!--    			 WHERE BO_GROUP = #bo_group#  -->
<!--    			<![CDATA[ -->
<!--    			   AND BO_SEQ 	> #bo_seq#  -->
<!--    			]]>  -->
   
<!--    </update> -->
   
<!--    <insert id="insertFreeboardReply" parameterClass="freeboardVO"> -->
<!--    	  <selectKey keyProperty="bo_no" resultClass="string"> -->
<!--           SELECT FREEBOARD_SEQ.NEXTVAL -->
<!--             FROM DUAL -->
<!--       </selectKey> -->
      
<!--       INSERT INTO FREEBOARD(BO_NO -->
<!--                         ,BO_TITLE -->
<!--                         ,BO_WRITER -->
<!--                         ,BO_NICKNAME -->
<!--                         ,BO_PWD -->
<!--                         ,BO_MAIL -->
<!--                         ,BO_IP -->
<!--                         ,BO_CONTENT -->
<!--                         ,BO_GROUP -->
<!--                         ,BO_SEQ -->
<!--                         ,BO_DEPTH) -->
<!--                      VALUES(#bo_no# -->
<!--                         ,#bo_title# -->
<!--                         ,#bo_writer# -->
<!--                         ,#bo_nickname# -->
<!--                         ,#bo_pwd# -->
<!--                         ,#bo_mail# -->
<!--                         ,#bo_ip# -->
<!--                         ,#bo_content# -->
<!--                         ,#bo_group# -->
<!--                         ,#bo_seq# -->
<!--                         ,#bo_depth#) -->
   				   
<!--    </insert> -->
   <!-- 댓글 쿼리 끝 -->
   
   <!-- 페이지 쿼리 -->
   <select id="totalCount" parameterClass="map" resultClass="int">
   			SELECT COUNT(GOODS_ID)
   			  FROM GOODS 
   			 WHERE GOODS_DELETE = 'n' 
   			 <include refid="searchCondition"/> 
   			  
   </select>
   <!-- 
goods_id
lprod_gu
buyer_id
goods_nm
goods_pc
goods_invntry
goods_dc
goods_delete -->
   	<select id="searchProdId" resultClass="shoppingVO" parameterClass="map">
		select goods.goods_id as goods_id, goods.goods_nm as goods_nm
		from goods, 
		(select max(a.goods_id) as goods_id from goods a, 
				(select lprod_gu
					from goods 
					where goods_nm like '%'||#goods_nm#||'%' 
					group by lprod_gu) b
			where a.lprod_gu = b.lprod_gu
			group by a.lprod_gu) sub
		where goods.goods_id = sub.goods_id

	</select>
   
   
   
</sqlMap>    








