<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- 
		트랜잭션 처리 규칙											(트랜잭션 설정)
									Controller						service							dao					DB
																	class A1
																	 proxy-target-class="false"
									 								class A2 implements B
																	  proxy-target-class="true"
																	@Transactional(익셉션 : 롤백 조건)
									 public(필수) 컨트롤러 메서드(){}==> 서비스 레이어 메서드(){}<===========>트랜잭션처리(X)<=====>쿼리 질의
			-스프링 프레임워크-			  
			= 트랜잭션     (커밋)  =	<==	 throws Exception(X) <===>	throws Exception(X) <==>	throws Exception(X) <==> 에러(X)
			=  매니저     (롤백) =   <==	 throws Exception(O) <===>	throws Exception(O) <==>	throws Exception(O) <==> 에러(O)
			=============
	 -->
	 
	 <!-- 
	 	application-ibatis.xml 내의
	 	<bean id="transactionMgr" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
			p:dataSource-ref="dataSource">
		</bean>
		의 id 를 사용
		
		어노테이션 기반의 트랜잭션 처리 설정 : @Transactional
	  -->
	<tx:annotation-driven transaction-manager="transactionMgr"
						  proxy-target-class="true"/>
</beans>
